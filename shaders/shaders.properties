
clouds=off
underwaterOverlay=false
sun=true
moon=true
vignette=false
rain.depth=true
beacon.beam.depth=true

## Separate AO
separateAo=true

## Custom uniforms ######################################################################################################################################################################

variable.float.normalizedTime=frac(worldTime / 24000 + (750.0 / 24000.0))

## Texture Sizes
uniform.vec2.screenSize=vec2(viewWidth, viewHeight)
uniform.vec2.screenSizeInverse=vec2(1.0 / viewWidth, 1.0 / viewHeight)

## Calling it lightPosition because moon and sun have the same screen space coordinates
uniform.vec2.lightPositionClip=vec2( \
    ( ((sunPosition.x * gbufferProjection.0.0) + (sunPosition.y * gbufferProjection.1.0)) + gbufferProjection.2.0 + gbufferProjection.3.0 ) / -sunPosition.z, \
    ( ((sunPosition.x * gbufferProjection.0.1) + (sunPosition.y * gbufferProjection.1.1)) + gbufferProjection.2.1 + gbufferProjection.3.1 ) / -sunPosition.z \
)

## Normalized Positions
variable.float.sunLength=sqrt((sunPosition.x * sunPosition.x) + (sunPosition.y * sunPosition.y) + (sunPosition.z * sunPosition.z))
uniform.vec3.sunDir=vec3(sunPosition.x / sunLength, sunPosition.y / sunLength, sunPosition.z / sunLength)

variable.float.moonLength=sqrt((moonPosition.x * moonPosition.x) + (moonPosition.y * moonPosition.y) + (moonPosition.z * moonPosition.z))
uniform.vec3.moonDir=vec3(moonPosition.x / moonLength, moonPosition.y / moonLength, moonPosition.z / moonLength)

variable.float.upLength=sqrt((upPosition.x * upPosition.x) + (upPosition.y * upPosition.y) + (upPosition.z * upPosition.z))
uniform.vec3.up=vec3(upPosition.x / upLength, upPosition.y / upLength, upPosition.z / upLength)

## Sunset Curve
uniform.float.sunset=pow( cos( normalizedTime * pi * 4 ) * 0.5 + 0.5, 25 )

uniform.float.farInverse=1.0 / far
uniform.float.nearInverse=1.0 / near


## Weather

uniform.int.precipitation=biome_precipitation
uniform.float.temperature=temperature

uniform.float.isRainSmooth=smooth(1, if((biome_precipitation == 1) && temperature >= 0.15 && rainStrength > 0.1, 1, 0), 3)


## Water effects
uniform.vec2.playerLMCSmooth=vec2(smooth(2, eyeBrightness.x / 240., 1), smooth(3, eyeBrightness.y / 240., 1))

# Textures ######################################################################################################################################################################

texture.gbuffers.colortex4=minecraft:textures/block/water_still.png
texture.deferred.colortex4=minecraft:textures/environment/clouds.png

# Program Management ######################################################################################################################################################################

alphaTest.gbuffers_weather=GEQUAL 0.01
##blend.gbuffers_weather.colortex4=off

# Profiles ######################################################################################################################################################################

# Sliders
# Options with multiple allowed values can be shown as sliders

sliders         = SKY_SUNSET_R SKY_SUNSET_G SKY_SUNSET_B CLOUD_SIZE CLOUD_HEIGHT WAVING_LIQUIDS_AMOUNT WAVING_LIQUIDS_SPEED WAVING_BLOCKS_AMOUNT WAVING_BLOCKS_SPEED SUN_SIZE sunPathRotation FOG_DISTANCE FOG_START

# Option screen configuration
# Main screen
screen          = CREDITS <empty> <empty> <empty> [ATMOSPHERICS] [WAVING] [DEBUG]

# Sub-screen

screen.ATMOSPHERICS=FOG FOG_QUALITY FOG_START FOG_DISTANCE <empty> <empty> CLOUDS <empty> CLOUD_HEIGHT CLOUD_SIZE <empty> <empty> SUN_SIZE_CHANGE SUN_SIZE 
screen.WAVING=WAVING_BLOCKS <empty> WAVING_BLOCKS_AMOUNT WAVING_BLOCKS_SPEED WAVING_LEAVES WAVING_LANTERNS <empty> <empty>  WAVING_LIQUIDS <empty> WAVING_LIQUIDS_AMOUNT WAVING_LIQUIDS_SPEED

screen.DEBUG = *

# Screen options
#   OPTION    - option name
#   [NAME]    - link to sub-screen NAME
#   <profile> - profile selection
#   <empty>   - empty slot
#   *         - the rest of the options not configured on any of the screens

# Main screen
screen.columns=2
# Sub-screen

